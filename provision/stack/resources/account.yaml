account:
  resourceMonitor: account_resource_monitor
  sessionPolicy: governance.policy.account_session_policy
  passwordPolicy: governance.policy.account_password_policy
  # The account authentication policy should be the default for the typical "person" users and all other users should be special cased below.
  authenticationPolicy: governance.policy.account_authentication_policy
  tags:
    governance.tag.environment: dev
  parameters:
    # assign a network policy to the account, allowing/blocking access based on network rules
    network_policy: ACCOUNT_NETWORK_POLICY
    # abort queries where the connection is lost due to abrupt session termination
    abort_detached_query: true
    # allow clients to cache MFA tokens to prevent multiple MFA prompts when using multiple connections
    allow_client_mfa_caching: true
    # allow clients to cache ID tokens to prevent multiple browser prompts when using SSO with multiple connections
    allow_id_token: true
    # prevent logging values bound in prepared statements since they may be sensitive
    client_enable_log_info_statement_parameters: false
    # prevent direct grants to users
    disable_user_privilege_grants: true
    # prevent nondeterministic MERGE statements
    error_on_nondeterministic_merge: true
    # prevent nondeterministic UPDATE statements
    error_on_nondeterministic_update: true
    # terminate statements that are queued longer than this timeout
    statement_queued_timeout_in_seconds: 3600 # 1 hour
    # terminate statements that execute longer than this timeout
    statement_timeout_in_seconds: 21600 # 6 hours
    # set the default session time zone to UTC
    timezone: UTC
    # abort transactions automatically on error
    transaction_abort_on_error: true
    # do not redact queries that fail due to a syntax error to facilitate debugging
    enable_unredacted_query_syntax_error: true
    # periodically re-encrypt table data with new keys CIS-4.1
    enable_tri_secret_and_rekey_opt_out_for_image_repository: true
    enable_tri_secret_and_rekey_opt_out_for_spcs_block_storage: true
    # periodic_data_rekeying cannot be set to true because the account is using hybrid tables
    # periodic_data_rekeying: true
    # use 256-bit keys when encrypting data with Snowflake clients CIS-4.2
    client_encryption_key_size: 256
    # set the default data retention on objects that support time travel, CIS-4.3
    data_retention_time_in_days: 7
    # enforce a minimum data retention period on objects that support time travel, CIS-4.4
    min_data_retention_time_in_days: 7
    # maximum time to extend data retention for tables to prevent streams from becoming stale
    max_data_extension_time_in_days: 14
    # require a storage integration to create a stage, CIS-4.5
    require_storage_integration_for_stage_creation: true
    # require a storage integration to operate a stage, CIS-4.6
    require_storage_integration_for_stage_operation: true
    # prevent COPY INTO statements from unloading data to an inline URL, CIS-4.8
    prevent_unload_to_inline_url: true
    # initialize serverless tasks with a smaller initial warehouse size by default
    user_task_managed_initial_warehouse_size: xsmall
    # set a default log level
    log_level: INFO

resourceMonitors:
  - name: account_resource_monitor
    creditQuota: 300
    startTimestamp: immediately
    frequency: monthly
    notifyUsers:
      - break_glass
    triggers:
      - threshold: 50
        action: notify
      - threshold: 75
        action: notify
      - threshold: 90
        action: notify
      - threshold: 100
        action: suspend
      - threshold: 110
        action: suspend_immediate
  - name: weekly_resource_monitor
    creditQuota: 100
    startTimestamp: immediately
    frequency: weekly
    notifyUsers:
      - break_glass
    triggers:
      - threshold: 50
        action: notify
      - threshold: 75
        action: notify
      - threshold: 90
        action: notify
      - threshold: 100
        action: suspend
      - threshold: 110
        action: suspend_immediate
  # monitor created by provision init
  - name: provision_wh_monitor
    creditQuota: 50
    startTimestamp: immediately
    frequency: weekly
    notifyUsers:
      - break_glass
    triggers:
      - threshold: 75
        action: notify
      - threshold: 100
        action: suspend

warehouses:
  - name: default_user_wh
    properties:
      warehouse_size: xsmall
      resource_monitor: weekly_resource_monitor
      auto_suspend: 60
      auto_resume: true
      initially_suspended: true
      warehouse_type: standard
      min_cluster_count: 1
      max_cluster_count: 1
      scaling_policy: standard
      enable_query_acceleration: false
      comment: The default user warehouse
  - name: alert_wh
    properties:
      warehouse_size: xsmall
      resource_monitor: weekly_resource_monitor
      auto_suspend: 60
      auto_resume: true
      initially_suspended: true
      warehouse_type: standard
      min_cluster_count: 1
      max_cluster_count: 1
      scaling_policy: standard
      enable_query_acceleration: false
      comment: Warehouse for alerts

databases:
  # database created by provision init
  - name: phdata
  - name: governance

schemas:
  # remove the default public schemas
  - database: phdata
    name: public
    destroy: true
  - database: governance
    name: public
    destroy: true
  - database: governance
    name: policy
  - database: governance
    name: tag
  - database: governance
    name: alert
  - database: governance
    name: log

roles:
  - name: log_admin

roleGrants:
  - name: alert_admin
    toRoles:
      - sysadmin
  - name: log_admin
    toRoles:
      - sysadmin
  - name: policy_admin
    toRoles:
      - sysadmin
  - name: share_admin
    toRoles:
      - sysadmin
  - name: tag_admin
    toRoles:
      - sysadmin
  - name: accountadmin
    toUsers:
      - break_glass

privilegeGrants:
  # privilege grants to the ALERT_ADMIN role to manage alerts
  - objectType: account
    roleName: alert_admin
    owner: accountadmin
    privilege:
      - create integration
      - execute alert
      - execute task
      - execute managed alert
      - execute managed task
      - audit
      - monitor
      - monitor execution
      - monitor security
      - monitor usage
  # many alerts use the snowflake shared database for account usage.
  - objectType: database
    objectName: snowflake
    roleName: alert_admin
    privilege: imported privileges
  - objectType: database
    objectName: governance
    roleName: alert_admin
    privilege: usage
  - objectType: schema
    objectName: governance.alert
    roleName: alert_admin
    privilege:
      - usage
      - create alert
  - objectType: warehouse
    objectName: alert_wh
    roleName: alert_admin
    privilege: usage
  # privilege grants to the LOG_ADMIN role to manage logs
  - objectType: account
    roleName: log_admin
    owner: accountadmin
    privilege:
      - modify log level
      - modify session log level
      - modify trace level
      - modify session trace level
      - audit
      - monitor
      - monitor execution
      - monitor security
      - monitor usage
  - objectType: database
    objectName: governance
    roleName: log_admin
    privilege: usage
  - objectType: schema
    objectName: governance.log
    roleName: log_admin
    privilege:
      - usage
      - create event table
  # privilege grants to the POLICY_ADMIN role to manage policies
  - objectType: account
    owner: accountadmin
    roleName: policy_admin
    privilege:
      - apply authentication policy
      - apply packages policy
      - apply password policy
      - apply session policy
      - apply aggregation policy
      - apply masking policy
      - apply row access policy
      - apply privacy policy
      - apply projection policy
      - attach policy
      - create network policy
  - objectType: database
    objectName: governance
    roleName: policy_admin
    privilege: usage
  - objectType: schema
    objectName: governance.policy
    roleName: policy_admin
    privilege:
      - usage
      - create authentication policy
      - create packages policy
      - create password policy
      - create session policy
      - create network rule
      - create masking policy
      - create row access policy
      - create privacy policy
  # allow the policy_admin to set the break_glass authentication policy
  - objectType: user
    objectName: break_glass
    roleName: policy_admin
    privilege:
      - apply authentication policy
  # privilege grants to the SHARE_ADMIN role to manage data sharing
  - objectType: account
    roleName: share_admin
    owner: accountadmin
    privilege:
      - bind service endpoint
      - create account
      - create data exchange listing
      - create external volume
      - create share
      - import share
      - monitor usage
  # privilege grants to the TAG_ADMIN role to manage tags
  - objectType: account
    roleName: tag_admin
    owner: accountadmin
    privilege: apply tag
  - objectType: database
    objectName: governance
    roleName: tag_admin
    privilege: usage
  - objectType: schema
    objectName: governance.tag
    roleName: tag_admin
    privilege:
      - usage
      - create tag
  # allow all users to use the default_user_wh
  - objectType: warehouse
    objectName: default_user_wh
    roleName: public
    privilege: usage

# TODO: This is public for demonstration purposes. Adjust to limit network access.
networkRules:
  - database: governance
    schema: policy
    name: allow_public_ingress
    ruleType: ipv4
    mode: ingress
    valueList:
      - 0.0.0.0/0
    properties:
      comment: Allow public internet access to the Snowflake account

networkPolicies:
  - name: account_network_policy
    allowedNetworkRules:
      - GOVERNANCE.POLICY.ALLOW_PUBLIC_INGRESS
    properties:
      comment: The account network policy

sessionPolicies:
  - database: governance
    schema: policy
    name: account_session_policy
    properties:
      session_idle_timeout_mins: 60 # CIS-1.9
      session_ui_idle_timeout_mins: 60
      allowed_secondary_roles:
        - all
      comment: The account session policy

passwordPolicies:
  - database: governance
    schema: policy
    name: account_password_policy
    properties:
      password_min_length: 14 # CIS-1.5
      password_max_length: 24
      password_min_upper_case_chars: 1
      password_min_lower_case_chars: 1
      password_min_numeric_chars: 1
      password_min_special_chars: 1
      password_max_retries: 5
      password_lockout_time_mins: 30
      comment: The account password policy

authenticationPolicies:
  - database: governance
    schema: policy
    name: account_authentication_policy
    properties:
      authentication_methods:
        - saml
        - oauth
        - keypair
      client_types:
        - drivers
        - snowflake_ui
        - snowsql

  # apply to the break-glass user
  - database: governance
    schema: policy
    name: breakglass_authentication_policy
    properties:
      authentication_methods:
        - keypair
      client_types:
        - drivers
        - snowsql

  # apply to service accounts
  - database: governance
    schema: policy
    name: service_authentication_policy
    properties:
      authentication_methods:
        - keypair
        - oauth
      client_types:
        - drivers
        - snowsql

tags:
  - database: governance
    schema: tag
    name: environment
    allowedValues:
      - dev
      - qa
      - prod
      - org
    properties:
      comment: A tag to indicate which environment an object is associated with

users:
  - name: break_glass
    authenticationPolicy: governance.policy.breakglass_authentication_policy
    properties:
      email: toolkit-support@phdata.io
      login_name: break_glass
      display_name: break_glass
      type: service
      rsa_public_key: |
        -----BEGIN PUBLIC KEY-----
        MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIKnNiP6c9fxEvOOglo7
        h6R3Poq7Xa6WN720MHjySeu8Wk3hY25e5El3alBScJwf4BTd6y6QtKoCsUufM1Jq
        x2KVPozvrbciO5XWBf82scJtLhdP61WsJtiH1bfkAxM6H5pV1RAYs8VXvbK+2FFP
        104GbkZASw1/ozjDpWx27fb57dUseVGguOfPLQdqStLR+zefS4rsw7MLCy5kcCns
        b6IdGHOKjV1nL+VQWBVvCZK8+5vYk5kdi1NpqNumX1BDd7Xd6rUNSJqACfC3ykJ6
        pxiQlI6XvUbMJ+AW8lGl8897Zqo2kQuhkR3IBpOMjkhmtEOWcVgjsWDc9Qjm+8hu
        zwIDAQAB
        -----END PUBLIC KEY-----
