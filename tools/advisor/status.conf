variables {
  time_window_days = "30"
}

cache {
  alert_history {
    query = "SELECT * FROM snowflake.account_usage.alert_history"
  }
  
  show_streams_in_account {
    query = "SHOW STREAMS IN ACCOUNT"
  }

  show_materialized_views_in_account {
    query = "SHOW MATERIALIZED VIEWS IN ACCOUNT"
  }
}

checks {
  "Pipe errors" = {
    description = "Pipes that have failed in the past {{ time_window_days }} days."
    query = """SELECT
                 COUNT(*) AS "Error Count",
                 table_catalog_name || '.' || table_schema_name || '.' || table_name AS "Table Name",
                 pipe_catalog_name || '.' || pipe_schema_name || '.' || pipe_name AS "Pipe Name"
               FROM
                 snowflake.account_usage.copy_history
               WHERE
                 last_load_time >= DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
                 AND status IN ('Load failed', 'Load Skipped', 'Partially loaded')
                 AND pipe_name IS NOT NULL
               GROUP BY
                 2,
                 3
               ORDER BY
                 1 DESC;"""
    severity = MAJOR
    tags = [ERRORS, PIPE]
  }

  "Task errors" {
    description = "Tasks that have failed in the past {{ time_window_days }} days."
    query = """SELECT
                 COUNT(*) AS "Failure Count",
                 database_name AS "Database Name",
                 schema_name AS "Schema Name",
                 name AS "Task Name"
               FROM
                 snowflake.account_usage.task_history
               WHERE
                 completed_time >= DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
                 AND scheduled_time < CURRENT_TIMESTAMP()
                 AND state = 'FAILED'
               GROUP BY
                 2,
                 3,
                 4
               ORDER BY
                 1 DESC;"""
    severity = MAJOR
    tags = [ERRORS, TASK]
  }

  "Users login failures" {
    description = "Number of login failures by user in the past {{ time_window_days }} days."
    query = """SELECT
                 LEFT(user_name, 3) || RPAD('*', LENGTH(user_name) - 3, '*') AS "User Name",
                 COUNT(*) AS "Failed Login Count"
               FROM
                 snowflake.account_usage.login_history
               WHERE
                 event_timestamp >= DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
                 AND is_success = 'NO'
               GROUP BY
                 1
               HAVING
                 "Failed Login Count" > 5
               ORDER BY
                 2 DESC;
"""
    severity = MINOR
    tags = [ERRORS, USER]
    graph = {
      title = "User login failures",
      type = "bar",
      x = { field = "User Name", type = "ordinal", labels = "true", sort = YDESC },
      y = { field = "Failed Login Count", type = "quantitative", labels = "true" }
    }
  }

  "Stale streams" {
    description = """Stream which were last read before the stale_after time. When a stream is stale, it cannot be
                     read and you need to recreate the stream to resume reading from it."""
    query = """SELECT
                 "name" AS "Stream Name",
                 "database_name" AS "Database Name",
                 "schema_name" AS "Schema Name",
                 "table_name" AS "Table Name",
                 "stale_after" AS "Stale After"
               FROM
                 show_streams_in_account
               WHERE
                 "stale" = TRUE;"""
    cache = show_streams_in_account
    severity = MAJOR
    tags = [ERRORS, STREAM]
  }

  "Invalid materialized views" {
    description = """Materialized views which are invalid and cannot be queried. This can be caused by a change to the
                     base table that underlies the materialized view. For example, the base table may be dropped or
                     a column in the base table may be dropped."""
    query = """SELECT
                 "name" AS "Materialized View Name",
                 "database_name" AS "Database Name",
                 "schema_name" AS "Schema Name",
                 "invalid_reason" AS "Invalid Reason",
                 "owner" AS "Owner"
               FROM
                 show_materialized_views_in_account
               WHERE
                 "invalid" = TRUE
                 AND "invalid_reason" != 'Marked Materialized View as invalid manually.';"""
    cache = show_materialized_views_in_account
    severity = MAJOR
    tags = [ERRORS, MATERIALIZEDVIEWS]
  }

  "Triggered alerts" {
    description = """Triggered alerts in the last day."""
    query = """SELECT
                 COUNT(*) AS "Triggered Alerts Count",
                 name AS "Alert Name",
                 database_name AS "Database Name",
                 schema_name AS "Schema Name"
               FROM
                 alert_history
               WHERE
                 completed_time > DATEADD('DAY', -1, CURRENT_TIMESTAMP())
                 AND state = 'TRIGGERED'
               GROUP BY
                 name,
                 database_name,
                 schema_name
               ORDER BY
                 "Triggered Alerts Count" DESC;"""
    cache = alert_history
    severity = MINOR
    tags = [ERRORS, ALERTS]
  }

  "Failing Alerts" {
    description = """Failing alerts in the last 6 days. Failing alerts unable to properly execute because of errors in the definition of the alert or execution of its conditions."""
    query = """SELECT
                 COUNT(*) AS "Failed Alerts Count",
                 name AS "Alert Name",
                 database_name AS "Database Name",
                 schema_name AS "Schema Name"
               FROM
                 alert_history
               WHERE
                 completed_time > DATEADD('DAY', -6, CURRENT_TIMESTAMP())
                 AND state IN ('FAILED', 'CONDITION_FAILED', 'ACTION_FAILED')
               GROUP BY
                 name,
                 database_name,
                 schema_name
               ORDER BY
                 "Failed Alerts Count" DESC;"""
    cache = alert_history
    severity = MAJOR
    tags = [ERRORS, ALERTS]
  }
  
  "Inactive Users" {
    description = """Users that haven't logged in for more than {{ time_window_days }} days"""
    query = """SELECT
                 user_id AS "User ID",
                 LEFT(name, 3) || RPAD('*', LENGTH(name) - 3, '*') AS "User Name",
                 COALESCE(
                   last_success_login,
                   TIMESTAMP '9999-01-01 23:59:59.999'
                 ) AS "Last Successful Login"
               FROM
                 snowflake.account_usage.users
               WHERE
                 deleted_on IS NULL
                 AND (
                   (
                     last_success_login IS NULL
                     AND created_on < DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
                   )
                   OR last_success_login < DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
                 )
               ORDER BY
                 last_success_login;"""
    severity = INFO
    tags = [USER, LOGIN]
  }
}
