variables {
  time_window_days = "30"
}

cache {
  users {
    query = "SELECT * FROM snowflake.account_usage.users WHERE deleted_on IS NULL"
  }

  roles {
    query = "SELECT * FROM snowflake.account_usage.roles WHERE delete_on IS NULL"
  }

  databases {
    query = "SELECT * FROM snowflake.account_usage.databases WHERE deleted IS NULL;"
  }

  alerts {
    query = "SHOW ALERTS IN ACCOUNT"
  }

  stages {
    query = "SELECT * FROM snowflake.account_usage.stages WHERE deleted IS NULL"
  }

  show_shares_in_account {
    query = "SHOW SHARES IN ACCOUNT"
  }

  tags {
    query = "SELECT * FROM snowflake.account_usage.stages WHERE deleted IS NULL"
  }

  functions {
    query = "SELECT * FROM snowflake.account_usage.functions WHERE deleted IS NULL"
  }
}

checks {
  "User count" = {
    description = "Number of users in the account."
    query = """SELECT
                 COUNT(*) AS "Users"
               FROM
                 users;"""
    cache = users
    severity = INFO
    tags = [SCOPING]
  }

  "Role count" = {
    description = "Number of roles in the account."
    query = """SELECT
                 COUNT(*) AS "Roles"
               FROM
                 roles;"""
    cache = roles
    severity = INFO
    tags = [SCOPING]
  }

  "Sessions count" {
    description = "Number of sessions created per day each of the last {{ time_window_days }} days."
    query = """SELECT
                 DATE_TRUNC('DAY', created_on) AS "Date",
                 COUNT(DISTINCT session_id) AS "Sessions Created"
               FROM
                 snowflake.account_usage.sessions
               WHERE
                 created_on >= DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
               GROUP BY
                 1
               ORDER BY
                 1 DESC;"""
    severity = INFO
    tags = [SCOPING],
    graph = {
      title = "Sessions count per day",
      type = "area",
      x = { field = "Date", type = "temporal", labels = "true", timeUnit = "yearmonthdate" },
      y = { field = "Sessions Created", type = "quantitative", labels = "true" }
    }
  }

  "Database count" = {
    description = "Number of databases in the account."
    query = """SELECT
                 COUNT(*) AS "Databases"
               FROM
                 databases;"""
    severity = INFO
    cache = databases
    tags = [SCOPING]
  }

  "Query count" {
    description = "Number of queries in the past {{ time_window_days }} days."
    query = """SELECT
                 query_type AS "Query type",
                 execution_status AS "Execution status",
                 COUNT(*) AS "Count"
               FROM
                 snowflake.account_usage.query_history
               WHERE
                 start_time >= DATEADD('DAY', - {{ time_window_days }}, CURRENT_TIMESTAMP())
               GROUP BY
                 query_type,
                 execution_status
               ORDER BY
                 query_type;"""
    severity = INFO
    tags = [SCOPING]
  }

  "Active alert count" {
    description = """Alerts currently scheduled to run periodically."""
    query = """SELECT
                 COUNT(*) AS "Alerts"
               FROM
                 alerts;"""
    cache = alerts
    severity = INFO
    tags = [SCOPING, ALERTS]
  }

  "Stage count" {
    description = """Number of stages in the account."""
    query = """SELECT
                 COUNT(*) AS "Stages"
               FROM
                 stages;"""
    cache = stages
    severity = INFO
    tags = [SCOPING, STAGES]
  }

  "Share count" {
    description = """Number of shares in the account."""
    query = """SELECT
                 COUNT(*) AS "Shares"
               FROM
                 show_shares_in_account;"""
    cache = show_shares_in_account
    severity = INFO
    tags = [SCOPING, SHARES]
  }

  "Tag count" {
    description = """Number of tags in the account."""
    query = """SELECT
                 COUNT(*) AS "Tags"
               FROM
                 tags;"""
    cache = tags
    severity = INFO
    tags = [SCOPING, TAGS]
  }

  "External function count" {
    description = """Number of external functions in the account."""
    query = """SELECT
                 COUNT(*) AS "External Functions"
               FROM
                 functions
               WHERE
                 is_external = TRUE;"""
    cache = functions
    severity = INFO
    tags = [SCOPING, EXTERNAL_FUNCTIONS]
  }

  "Secondary roles usage" {
    description = """Number of users who are actively using secondary roles and those who are not. 
                     Snowflake now recommends users be configured to use "ALL" role as secondary role."""
    query = """SELECT COALESCE(default_secondary_role, 'Users not using secondary roles') AS secondary_role,  COUNT(*) AS count
                FROM users
                GROUP by secondary_role;"""
    cache = users
    severity = INFO
    tags = [SCOPING]
  }
}
